Quando a operação de map produz pares, estes ficam disponíveis em memória. Por motivo de eficiência, algumas vezes faz sentido tirar vantagem desse fato ao fornecer uma classe combiner para executar uma função do tipo reduce. Se um combiner for utilizado, os mapeamentos de pares chave-valor não serão imediatamento escritos na saída. Ao invés disso, eles serão coletados em listas, uma para cada valor de chave. Quando uma certa quantidade de pares chave-valor for escrita, esse buffer é esvaziado e todos os valores de cada chave são passados para o método reduce do combiner. Isso produz como saída os pares chave-valor resultantes da operação de combine, como se esses tivessem sido criados pela operação de map original.

Por exemplo: uma aplicação de MapReduce que conta palavras cuja operação de map produz pares (palavra,1) conforme as palavras são encontradas na entrada poderia usar uma função combiner para acelerar o processamento. Uma operação de combine começará a acumular a saída em listas na memória (ao invés do disco), uma lista por palavra. Quando uma certa quantidade de pares for produzida, a operação de combine será chamada uma vez para cada palavra única, junto com a lista disponível para ser iterada. O combiner então emite pares (palavra, quantidade nessa parte da entrada). Do ponto de vista da operação de reduce, essa saída contem a mesma informação que a saída original do map, mas com uma quantidade bem menor de pares produzidos para/e lidos do disco.